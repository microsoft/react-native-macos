parameters:
  # If this is a new stable branch, change `publishTag` to `latest` when going stable
  publishTag: 'nightly'

steps:
  - checkout: self
    clean: true
    fetchFilter: blob:none
    persistCredentials: true

  - template: /.ado/templates/configure-git.yml@self

  - script: |
      yarn install
    displayName: Install npm dependencies

  - script: |
      node .ado/scripts/prepublish-check.mjs --verbose --skip-auth --tag ${{ parameters['publishTag'] }}
    displayName: Verify release config

  - script: |
      echo Target branch: $(System.PullRequest.TargetBranch)
      yarn nx release --dry-run --verbose
    displayName: Version and publish packages (dry run)
    condition: and(succeeded(), ne(variables['publish_react_native_macos'], '1'))

  # Disable Nightly publishing on the main branch
  - ${{ if endsWith(variables['Build.SourceBranchName'], '-stable') }}:
    - script: |
        echo "//registry.npmjs.org/:_authToken=$(npmAuthToken)" > ~/.npmrc
        node .ado/scripts/prepublish-check.mjs --verbose --tag ${{ parameters['publishTag'] }}
      displayName: Set and validate npm auth
      condition: and(succeeded(), eq(variables['publish_react_native_macos'], '1'))

    - script: |
        git switch $(Build.SourceBranchName)
        yarn nx release --skip-publish --verbose
      env:
        GITHUB_TOKEN: $(githubAuthToken)
      displayName: Version Packages and Github Release
      condition: and(succeeded(), eq(variables['publish_react_native_macos'], '1'))

    - script: |
        if [[ -f .rnm-publish ]]; then
          yarn nx release publish --tag ${{ parameters['publishTag'] }} --excludeTaskDependencies 
        fi
      displayName: Publish packages
      condition: and(succeeded(), eq(variables['publish_react_native_macos'], '1'))

  - script: |
      rm -f ~/.npmrc
    displayName: Remove npmrc if it exists
    condition: always()
