name: PR

on:
  pull_request:
    types: [opened, synchronize, edited]
    branches: [ "main", "*-stable", "release/*" ]

concurrency:
  # Ensure single build of a pull request. `main` should not be affected.
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-title:
    name: "Lint PR title"
    permissions: {}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      # We lint the PR title instead of the commit message to avoid script injection attacks.
      # Using environment variables prevents potential security vulnerabilities as described in:
      # https://docs.github.com/en/actions/security-for-github-actions/security-guides/security-hardening-for-github-actions#example-of-a-script-injection-attack
      - name: Lint PR title
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "$PR_TITLE" | npx @rnx-kit/commitlint-lite@2.0.0
  build-website:
    name: "Build the website"
    permissions: {}
    if: github.base_ref == 'main'
    uses: ./.github/workflows/microsoft-build-website.yml
  npm-publish-dry-run:
    name: "NPM Publish (Dry Run)"
    permissions: {}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Read publish tag from nx.json
        id: config
        run: |
          PUBLISH_TAG=$(jq -r '.release.version.generatorOptions.currentVersionResolverMetadata.tag' nx.json)
          echo "publishTag=${PUBLISH_TAG}" >> "$GITHUB_OUTPUT"
          echo "Using publish tag from nx.json: ${PUBLISH_TAG}"
      - name: Configure git
        run: |
          git config --global user.email "53619745+rnbot@users.noreply.github.com"
          git config --global user.name "React-Native Bot"
          git remote set-url origin https://rnbot:${{ secrets.GITHUB_TOKEN }}@github.com/microsoft/react-native-macos
      - name: Install dependencies
        run: yarn
      - name: Verify release config
        run: |
          node .ado/scripts/prepublish-check.mjs --verbose --skip-auth --tag ${{ steps.config.outputs.publishTag }}

      - name: Version and publish packages (dry run)
        run: |
          echo "Target branch: ${{ github.base_ref }}"
          yarn nx release --dry-run --verbose
  
  yarn-constraints:
    name: "Check Yarn Constraints"
    permissions: {}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: yarn
      - name: Check constraints
        run: yarn constraints

  javascript-tests:
    name: "JavaScript Tests"
    permissions: {}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '23'
      
      - name: Install Homebrew dependencies
        run: |
          brew install xcbeautify ccache
      
      - name: Setup Xcode
        run: |
          sudo xcode-select --switch /Applications/Xcode_16.4.0.app
      
      - name: Download Xcode Platforms
        run: |
          xcodebuild -downloadAllPlatforms
          sudo xcodebuild -runFirstLaunch
      
      - name: Install npm dependencies
        run: yarn install
      
      - name: Run tests
        run: yarn test-ci
      
      - name: Flow type check
        run: yarn flow-check
      
      - name: Lint
        run: yarn lint
      
      - name: Format check
        run: yarn format-check

  build-test-rntester:
    name: "Build RNTester - ${{ matrix.platform }}, ${{ matrix.arch }}, ${{ matrix.engine }}"
    permissions: {}
    runs-on: macos-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        platform: [macos, ios, xros]
        arch: [oldarch, newarch]
        engine: [jsc, hermes]
        include:
          # Platform-specific properties
          - platform: macos
            sdk: macosx
            scheme: RNTester-macOS
            packager_platform: macos
          - platform: ios
            sdk: iphonesimulator
            scheme: RNTester
            packager_platform: ios
          - platform: xros
            sdk: xrsimulator
            scheme: RNTester-visionOS
            packager_platform: ios
          # Architecture-specific properties
          - arch: oldarch
            new_arch_enabled: '0'
          - arch: newarch
            new_arch_enabled: '1'
          - engine: jsc
            use_hermes: '0'
          - engine: hermes
            use_hermes: '1'
    
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '23'
      
      - name: Install Homebrew dependencies
        run: |
          brew install xcbeautify ccache
      
      - name: Setup Xcode
        run: |
          sudo xcode-select --switch /Applications/Xcode_16.2.app
      
      - name: Download Xcode Platforms
        run: |
          xcodebuild -downloadAllPlatforms
          sudo xcodebuild -runFirstLaunch
      
      - name: Install npm dependencies
        run: yarn install
      
      - name: Install Pods
        working-directory: packages/rn-tester
        env:
          RCT_NEW_ARCH_ENABLED: ${{ matrix.new_arch_enabled }}
          USE_HERMES: ${{ matrix.use_hermes }}
        run: |
          set -eox pipefail
          bundle install
          bundle exec pod install --verbose
      
      - name: Build ${{ matrix.scheme }}
        env:
          CCACHE_DISABLE: 1
        run: |
          set -eox pipefail
          .ado/scripts/xcodebuild.sh packages/rn-tester/RNTesterPods.xcworkspace ${{ matrix.sdk }} Debug ${{ matrix.scheme }} build
